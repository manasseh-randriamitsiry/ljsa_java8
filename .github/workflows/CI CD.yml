name: JavaFX CI/CD with Java 17 and EXE Release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  # üß± 1Ô∏è‚É£ Linux job: Build the JAR with SQLite
  build-jar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # No database service needed for SQLite

      - name: Build JAR with dependencies
        run: mvn -B clean package -DskipTests --file pom.xml

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: ljsa-jar
          path: target/*.jar

  # ü™ü 2Ô∏è‚É£ Windows job: Create simple EXE wrapper
  package-exe:
    runs-on: windows-latest
    needs: build-jar

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: ljsa-jar
          path: target

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create simple EXE wrapper
        shell: cmd
        run: |
          echo Creating application directory structure...
          mkdir app
          xcopy target\*.jar app\ /Y
          
          echo Creating batch wrapper...
          echo @echo off > run.bat
          echo cd /d "%%~dp0" >> run.bat
          echo java -jar *.jar >> run.bat
          echo if errorlevel 1 pause >> run.bat
          
          echo Creating self-contained package...
          mkdir package
          xcopy app\*.jar package\ /Y
          copy run.bat package\
          
          echo Creating executable wrapper...
          echo @echo off > ljsa.exe
          echo cd /d "%%~dp0" >> ljsa.exe
          echo java -jar *.jar >> ljsa.exe
          echo if errorlevel 1 pause >> ljsa.exe
          
          echo Creating complete distribution...
          mkdir dist
          copy ljsa.exe dist\
          xcopy app\*.jar dist\ /Y
          
          echo Verifying files...
          dir dist\

      - name: Upload distribution artifact
        uses: actions/upload-artifact@v4
        with:
          name: ljsa-exe
          path: dist

  # üöÄ 3Ô∏è‚É£ Release job: Publish GitHub release for version tags or manual dispatch
  release:
    runs-on: ubuntu-latest
    needs: package-exe
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Download distribution artifact
        uses: actions/download-artifact@v4
        with:
          name: ljsa-exe
          path: dist

      - name: List files for release
        run: |
          echo "Files in dist directory:"
          ls -la dist/

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/ljsa.exe
            dist/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}