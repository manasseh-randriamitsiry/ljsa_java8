name: JavaFX CI/CD with Java 17 and EXE Release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  # üß± 1Ô∏è‚É£ Linux job: Build the JAR with SQLite
  build-jar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # No database service needed for SQLite

      - name: Build JAR with dependencies
        run: mvn -B clean package -DskipTests --file pom.xml

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: ljsa-jar
          path: target/*.jar

  # ü™ü 2Ô∏è‚É£ Windows job: Create standalone executable
  package-exe:
    runs-on: windows-latest
    needs: build-jar

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: ljsa-jar
          path: target

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: List downloaded files
        shell: cmd
        run: |
          dir target

      - name: Create standalone executable package
        shell: cmd
        run: |
          echo Creating application directory...
          mkdir ljsa-package
          
          echo Copying JAR file...
          copy target\*.jar ljsa-package\
          
          echo Creating launcher script...
          echo @echo off > ljsa-package\ljsa.exe
          echo powershell -WindowStyle Hidden -Command "Start-Process java -ArgumentList '-jar', '%~dp0ljsa-1.0-SNAPSHOT.jar' -Wait" >> ljsa-package\ljsa.exe
          
          echo Renaming launcher to EXE...
          del ljsa-package\ljsa.exe
          echo @echo off > ljsa-package\ljsa.bat
          echo powershell -WindowStyle Hidden -Command "Start-Process java -ArgumentList '-jar', '%~dp0ljsa-1.0-SNAPSHOT.jar'" >> ljsa-package\ljsa.bat
          
          echo Creating README file...
          echo LJSA Application > ljsa-package\README.txt
          echo =============== >> ljsa-package\README.txt
          echo To run the application, double-click on ljsa.bat >> ljsa-package\README.txt
          echo Make sure you have Java 8 or higher installed on your system >> ljsa-package\README.txt
          
          echo Creating self-extracting archive...
          powershell "Compress-Archive -Path 'ljsa-package\*' -DestinationPath 'ljsa-package.zip'"
          
          echo Creating self-extracting EXE with 7z...
          echo ;!@Install@!UTF-8! > config.txt
          echo Title="LJSA Application" >> config.txt
          echo ExecuteFile="ljsa.bat" >> config.txt
          echo ;!@InstallEnd@! >> config.txt
          
          REM Download 7z SFX module
          curl -L -o 7zSfx.exe https://github.com/mcmilk/7z-bin/raw/master/sfx/win32/7zS2con.sfx
          
          REM Create self-extracting EXE
          copy /b 7zSfx.exe+ljsa-package.zip ljsa.exe
          
          echo Creating dist directory...
          mkdir dist
          copy ljsa.exe dist\
          copy target\*.jar dist\

      - name: Upload EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: ljsa-exe
          path: dist

  # üöÄ 3Ô∏è‚É£ Release job: Publish GitHub release for version tags or manual dispatch
  release:
    runs-on: ubuntu-latest
    needs: package-exe
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Download EXE artifact
        uses: actions/download-artifact@v4
        with:
          name: ljsa-exe
          path: dist

      - name: List files for release
        run: |
          echo "Files in dist directory:"
          ls -la dist/

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/ljsa.exe
            dist/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}