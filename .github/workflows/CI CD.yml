name: JavaFX CI/CD with Java 11 and EXE Release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  # üß± 1Ô∏è‚É£ Linux job: Build the JAR with SQLite
  build-jar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      # No database service needed for SQLite

      - name: Build JAR with dependencies
        run: mvn -B clean package -DskipTests --file pom.xml

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: ljsa-jar
          path: target/*.jar

  # ü™ü 2Ô∏è‚É£ Windows job: Create executable using launch4j
  package-exe:
    runs-on: windows-latest
    needs: build-jar

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: ljsa-jar
          path: target

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Download and setup launch4j
        shell: cmd
        run: |
          echo Downloading launch4j...
          curl -L -o launch4j.zip https://github.com/mrdon/launch4j/releases/download/launch4j-3.14/launch4j-3.14-win32.zip
          echo Extracting launch4j...
          7z x launch4j.zip
          
          echo Contents of current directory:
          dir
          
          echo Finding JAR file...
          for /f "tokens=*" %%i in ('dir target\*.jar /b ^| findstr /v "original"') do set JAR_FILE=%%i
          echo Found JAR file: %JAR_FILE%
          
          echo Creating launch4j configuration...
          echo ^<?xml version="1.0" encoding="UTF-8"?^> > ljsa.xml
          echo ^<launch4jConfig^> >> ljsa.xml
          echo   ^<dontWrapJar^>false^</dontWrapJar^> >> ljsa.xml
          echo   ^<headerType^>gui^</headerType^> >> ljsa.xml
          echo   ^<jar^>target/%JAR_FILE%^</jar^> >> ljsa.xml
          echo   ^<outfile^>ljsa.exe^</outfile^> >> ljsa.xml
          echo   ^<errTitle^>LJSA Error^</errTitle^> >> ljsa.xml
          echo   ^<cmdLine^>^</cmdLine^> >> ljsa.xml
          echo   ^<chdir^>^</chdir^> >> ljsa.xml
          echo   ^<priority^>normal^</priority^> >> ljsa.xml
          echo   ^<downloadUrl^>https://www.java.com/download/^</downloadUrl^> >> ljsa.xml
          echo   ^<supportUrl^>^</supportUrl^> >> ljsa.xml
          echo   ^<stayAlive^>false^</stayAlive^> >> ljsa.xml
          echo   ^<restartOnCrash^>false^</restartOnCrash^> >> ljsa.xml
          echo   ^<manifest^>^</manifest^> >> ljsa.xml
          echo   ^<icon^>^</icon^> >> ljsa.xml
          echo   ^<jre^> >> ljsa.xml
          echo     ^<path^>^</path^> >> ljsa.xml
          echo     ^<bundledJre64Bit^>false^</bundledJre64Bit^> >> ljsa.xml
          echo     ^<bundledJreAsFallback^>false^</bundledJreAsFallback^> >> ljsa.xml
          echo     ^<minVersion^>1.8.0^</minVersion^> >> ljsa.xml
          echo     ^<maxVersion^>^</maxVersion^> >> ljsa.xml
          echo     ^<jdkPreference^>preferJre^</jdkPreference^> >> ljsa.xml
          echo     ^<runtimeBits^>64/32^</runtimeBits^> >> ljsa.xml
          echo   ^</jre^> >> ljsa.xml
          echo   ^<splash^> >> ljsa.xml
          echo     ^<file^>^</file^> >> ljsa.xml
          echo     ^<waitForWindow^>true^</waitForWindow^> >> ljsa.xml
          echo     ^<timeout^>60^</timeout^> >> ljsa.xml
          echo     ^<timeoutErr^>true^</timeoutErr^> >> ljsa.xml
          echo   ^</splash^> >> ljsa.xml
          echo ^</launch4jConfig^> >> ljsa.xml

      - name: Create EXE using launch4j
        shell: cmd
        run: |
          echo Running launch4j to create EXE...
          dir
          
          if exist launch4j.exe (
            echo Found launch4j.exe, running it...
            launch4j.exe ljsa.xml
          ) else (
            echo launch4j.exe not found, trying launch4jc.exe...
            if exist launch4jc.exe (
              launch4jc.exe ljsa.xml
            ) else (
              echo Neither launch4j.exe nor launch4jc.exe found
              exit /b 1
            )
          )
          
          echo Checking if EXE was created...
          if exist ljsa.exe (
            echo ljsa.exe created successfully
            dir ljsa.exe
          ) else (
            echo Error: ljsa.exe was not created
            dir
            dir target\
            type ljsa.xml
            exit /b 1
          )
          
          echo Creating dist directory...
          mkdir dist
          copy ljsa.exe dist\
          copy target\*.jar dist\

      - name: Upload EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: ljsa-exe
          path: dist

  # üöÄ 3Ô∏è‚É£ Release job: Publish GitHub release for version tags or manual dispatch
  release:
    runs-on: ubuntu-latest
    needs: package-exe
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Download EXE artifact
        uses: actions/download-artifact@v4
        with:
          name: ljsa-exe
          path: dist

      - name: List files for release
        run: |
          echo "Files in dist directory:"
          ls -la dist/

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/ljsa.exe
            dist/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}